pipeline {
    agent any

    environment {
        NODE_HOME = tool name: 'Node18', type: 'jenkins.plugins.nodejs.tools.NodeJSInstallation'
        PATH = "${NODE_HOME}/bin:${env.PATH}"
        NODE_ENV = 'development'   // Ensures all devDependencies like Tailwind get installed
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'üì• Checking out code from GitHub...'
                checkout([$class: 'GitSCM',
                    branches: [[name: '*/main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/Sai-Khush/Walleto.git',
                        credentialsId: 'github-https-pat'
                    ]]
                ])
            }
        }

        stage('Clean Workspace') {
            steps {
                echo 'üßπ Cleaning workspace...'
                dir('Code/walleto') {
                    sh 'rm -rf node_modules package-lock.json .next'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                echo 'üì¶ Installing all dependencies including Tailwind + TypeScript...'
                dir('Code/walleto') {
                    sh '''
                        # Reinstall all dependencies, including dev packages
                        npm install tailwindcss postcss autoprefixer typescript @types/react @types/node --save-dev
                        npm install
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                echo 'üèóÔ∏è Building Next.js project...'
                dir('Code/walleto') {
                    sh 'npm run build'
                }
            }
        }

        stage('Deploy to DEV') {
            when {
                expression { currentBuild.currentResult == 'SUCCESS' }
            }
            steps {
                echo 'üöÄ Deploying build to DEV server...'
                dir('Code/walleto/out') {
                    sh '''
                        sudo mkdir -p /var/www/html/walleto
                        sudo rm -rf /var/www/html/walleto/*
                        sudo cp -r * /var/www/html/walleto/
                    '''
                }
            }
        }
    }

    post {
        success {
            echo '‚úÖ Build & Deployment completed successfully!'
        }
        failure {
            echo '‚ùå Build failed. Check Jenkins logs for missing dependency or config.'
        }
    }
}
