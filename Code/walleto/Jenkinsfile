pipeline {
    agent any

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Clean Workspace') {
            steps {
                echo "üßπ Cleaning old workspace..."
                dir('Code/walleto') {
                    sh 'rm -rf node_modules package-lock.json'
                }
            }
        }

        stage('Install Dependencies') {
    steps {
        echo "üì¶ Installing dependencies in Code/walleto..."
        dir('Code/walleto') {
            sh '''
                echo "Forcing install of ALL dependencies including devDependencies..."
                npm install --include=dev --no-audit --no-fund
            '''
        }
    }
}

        stage('Build') {
            steps {
                echo "üèóÔ∏è Building Next.js project..."
                dir('Code/walleto') {
                    sh '''
                        echo "Checking if TypeScript is visible before build..."
                        npx tsc --version || true
                        export NODE_PATH=$(npm root)
                        echo "NODE_PATH set to: $NODE_PATH"
                        npm run build || (echo "‚ùå Build failed! Checking TypeScript..." && ls -R node_modules/typescript || true)
                    '''
                }
            }
        }

        stage('Deploy to DEV') {
            when {
                expression { currentBuild.currentResult == 'SUCCESS' }
            }
            steps {
                echo "üöÄ Deployment stage (DEV) - build passed!"
            }
        }
    }

    post {
        success {
            echo "‚úÖ Deployment successful!"
        }
        failure {
            echo "‚ùå Deployment failed. Check logs above."
        }
    }
}
