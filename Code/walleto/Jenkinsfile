pipeline {
    agent any

    tools {
        nodejs "Node18"
    }

    environment {
        NODE_ENV = "development"   // üëà Forces npm to install ALL deps, including dev
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/Sai-Khush/Walleto.git',
                    credentialsId: 'github-https-pat'
            }
        }

        stage('Clean Workspace') {
            steps {
                echo "üßπ Cleaning old workspace..."
                dir('Code/walleto') {
                    sh 'rm -rf node_modules package-lock.json'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                echo "üì¶ Installing all dependencies (including dev)..."
                dir('Code/walleto') {
                    sh '''
                        npm cache clean --force
                        npm install --include=dev
                        npm list typescript || echo "‚ö†Ô∏è TypeScript not yet installed"
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                echo "üèóÔ∏è Building Next.js project..."
                dir('Code/walleto') {
                    sh '''
                        npm install -g typescript
                        npm run build || (echo "‚ùå Build failed - check TypeScript/Next setup" && exit 1)
                    '''
                }
            }
        }

        stage('Deploy to DEV') {
            when {
                expression { currentBuild.resultIsBetterOrEqualTo('SUCCESS') }
            }
            steps {
                echo "üöÄ Deploying Walleto to DEV environment..."
                // Example deploy: copy build output to /var/www/html or run PM2
                sh '''
                    echo "‚úÖ Deployment simulated (replace with actual deploy command)"
                '''
            }
        }
    }

    post {
        success {
            echo "‚úÖ Build & Deployment completed successfully!"
        }
        failure {
            echo "‚ùå Deployment failed. Check above logs for cause."
        }
    }
}
