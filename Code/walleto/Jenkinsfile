pipeline {
    agent any

    stages {
        stage('Declarative: Checkout SCM') {
            steps {
                checkout scm
            }
        }

        stage('Clean Workspace') {
            steps {
                echo "üßπ Cleaning old workspace..."
                dir('Code/walleto') {
                    sh 'rm -rf node_modules package-lock.json'
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                echo "üì¶ Installing dependencies in Code/walleto..."
                dir('Code/walleto') {
                    // Install local and global dependencies
                    sh '''
                        npm install --no-audit --no-fund --foreground-scripts=false --prefer-offline
                        npm install typescript --save-dev
                        npm install -g typescript
                        tsc --version
                    '''
                }
            }
        }

        stage('Build') {
            steps {
                echo "üèóÔ∏è Building Next.js project..."
                dir('Code/walleto') {
                    sh '''
                        echo "Verifying TypeScript before build..."
                        npx tsc --version
                        npm run build
                    '''
                }
            }
        }

        stage('Deploy to DEV') {
            when {
                expression { currentBuild.currentResult == 'SUCCESS' }
            }
            steps {
                echo "üöÄ Deploying build to DEV environment..."
                // Add your deployment logic here (for EC2 or S3)
            }
        }
    }

    post {
        success {
            echo "‚úÖ Deployment successful."
        }
        failure {
            echo "‚ùå Deployment failed."
        }
    }
}
